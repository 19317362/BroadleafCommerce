<testng-results>
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite">
    <groups>
      <group name="readPhoneById">
        <method signature="org.broadleafcommerce.profile.PhoneTest.readPhoneById()" name="readPhoneById" class="org.broadleafcommerce.profile.PhoneTest"/>
      </group>
      <group name="createPhone">
        <method signature="org.broadleafcommerce.profile.PhoneTest.createPhone(org.broadleafcommerce.profile.domain.Phone)" name="createPhone" class="org.broadleafcommerce.profile.PhoneTest"/>
      </group>
    </groups>
    <test name="Command line test">
      <class name="org.broadleafcommerce.catalog.service.CatalogTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-08-05T14:43:36Z" finished-at="2009-08-05T14:43:36Z">
        </test-method>
        <test-method status="SKIP" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-08-05T14:43:36Z" finished-at="2009-08-05T14:43:36Z">
        </test-method>
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-08-05T14:43:36Z" finished-at="2009-08-05T14:43:36Z">
        </test-method>
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2009-08-05T14:43:36Z" finished-at="2009-08-05T14:43:36Z">
        </test-method>
        <test-method status="SKIP" signature="tearDown()" name="tearDown" is-config="true" duration-ms="0" started-at="2009-08-05T14:43:36Z" finished-at="2009-08-05T14:43:36Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-08-05T14:43:36Z" finished-at="2009-08-05T14:43:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.catalog.service.CatalogTest.testCatalog() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2009-08-05T14:43:36Z" finished-at="2009-08-05T14:43:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.catalog.service.CatalogTest.testSkus() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="SKIP" signature="testCatalog()" name="testCatalog" duration-ms="0" started-at="2009-08-05T14:43:36Z" finished-at="2009-08-05T14:43:36Z">
        </test-method>
        <test-method status="SKIP" signature="testSkus()" name="testSkus" duration-ms="0" started-at="2009-08-05T14:43:36Z" finished-at="2009-08-05T14:43:36Z">
        </test-method>
      </class>
      <class name="org.broadleafcommerce.profile.PhoneTest">
        <test-method status="SKIP" signature="tearDown()" name="tearDown" is-config="true" duration-ms="0" started-at="2009-08-05T14:43:36Z" finished-at="2009-08-05T14:43:36Z">
        </test-method>
        <test-method status="FAIL" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2009-08-05T14:43:29Z" finished-at="2009-08-05T14:43:29Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[javax/servlet/http/HttpServletRequest]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: javax/servlet/http/HttpServletRequest
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2395)
	at java.lang.Class.getDeclaredMethods(Class.java:1763)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:460)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:443)
	at org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.findPersistenceMetadata(PersistenceAnnotationBeanPostProcessor.java:363)
	at org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessMergedBeanDefinition(PersistenceAnnotationBeanPostProcessor.java:296)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyMergedBeanDefinitionPostProcessors(AbstractAutowireCapableBeanFactory.java:745)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:448)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:84)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:42)
	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:173)
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:197)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:255)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextPrepareTestInstance(AbstractTestNGSpringContextTests.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:607)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:417)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:154)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:88)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:167)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:104)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:877)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:842)
	at org.testng.TestNG.run(TestNG.java:751)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:62)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:141)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:338)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:997)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="SKIP" signature="readPhoneById()" name="readPhoneById" duration-ms="1" depends-on-groups="createPhone" started-at="2009-08-05T14:43:36Z" finished-at="2009-08-05T14:43:36Z">
        </test-method>
        <test-method status="SKIP" signature="createPhone(org.broadleafcommerce.profile.domain.Phone)" name="createPhone" duration-ms="0" depends-on-groups="readCustomer1" started-at="2009-08-05T14:43:36Z" finished-at="2009-08-05T14:43:36Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method org.broadleafcommerce.profile.PhoneTest.createPhone(org.broadleafcommerce.profile.domain.Phone) depends on nonexistent group "readCustomer1"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method org.broadleafcommerce.profile.PhoneTest.createPhone(org.broadleafcommerce.profile.domain.Phone) depends on nonexistent group "readCustomer1"
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1036)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:110)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:877)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:842)
	at org.testng.TestNG.run(TestNG.java:751)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:62)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:141)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:338)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:997)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="SKIP" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-08-05T14:43:36Z" finished-at="2009-08-05T14:43:36Z">
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
